# frozen_string_literal: true

# Copyright 2016 New Context Services, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "dry/monads"
require "kitchen"
require "kitchen/terraform/config_attribute/color"
require "kitchen/terraform/config_attribute/groups"
require "kitchen/terraform/configurable"
require "kitchen/verifier/inspec"

# The kitchen-terraform verifier utilizes the InSpec infrastructure testing framework to verify the behaviour and state
# of resources in the Terraform state.
#
# It is a subclass of the kitchen-inspec verifier.
#
# === Test Kitchen Configuration
#
# The configuration of the verifier is used to control the behaviour of the InSpec runner.
#
# More information about the available configuration attributes is located with the respective modules.
#
# Test Kitchen configuration is defined in +.kitchen.yml+ and optionally overridden in +.kitchen.local.yml+.
#
# ==== Example
#
#   verifier:
#     name: "terraform"
#     color: false
#     groups:
#       -
#         name: "group_one"
#         attributes:
#           foo: "bar"
#         controls:
#           - "biz"
#         hostnames: "hostnames_output"
#         port: "123"
#         username: "test-user"
#       -
#         name: "group_two"
#
# === InSpec Profiles
#
# The InSpec profile for a Test Kitchen suite exists under +./test/integration/<Test Kitchen suite name>/+.
#
# @see ::Kitchen::Terraform::ConfigAttribute::Color
# @see ::Kitchen::Terraform::ConfigAttribute::Groups
# @see https://en.wikipedia.org/wiki/Secure_Shell Secure Shell
# @see https://github.com/chef/kitchen-inspec/ kitchen-inspec
# @see https://github.com/chef/kitchen-inspec/blob/master/lib/kitchen/verifier/inspec.rb kitchen-inspec: Verifier
# @see https://www.inspec.io/ InSpec
# @see https://www.inspec.io/docs/reference/profiles/ InSpec: Profiles
# @see https://www.terraform.io/docs/state/index.html Terraform: State
# @version 2
class ::Kitchen::Verifier::Terraform < ::Kitchen::Verifier::Inspec
  kitchen_verifier_api_version 2

  include ::Dry::Monads::Either::Mixin

  include ::Kitchen::Terraform::ConfigAttribute::Color

  include ::Kitchen::Terraform::ConfigAttribute::Groups

  include ::Kitchen::Terraform::Configurable

  # The verifier enumerates through each hostname of each group and verifies the associated InSpec controls.
  #
  # @example
  #   `kitchen verify suite-name`
  # @param state [::Hash] the mutable instance and verifier state.
  # @raise [::Kitchen::ActionFailed] if the result of the action is a failure.
  # @return [::Dry::Monads::Either] the result of the action.
  def call(state)
    self.class::EnumerateGroupsAndHostnames.call driver: driver, groups: config_groups do |group:, hostname:|
      state.store :group, group
      state.store :hostname, hostname
      info "Verifying host '#{hostname}' of group '#{group.fetch :name}'"
      super state
    end.bind do |success|
      Right logger.debug success
    end.or do |failure|
      raise ::Kitchen::ActionFailed, failure
    end
  end

  private

  # Modifies the Inspec Runner options generated by the kitchen-inspec verifier to support the verification of each
  # group's hosts.
  #
  # @api private
  # @return [::Hash] Inspec Runner options.
  # @see https://github.com/chef/inspec/blob/master/lib/inspec/runner.rb ::Inspec::Runner
  def runner_options(transport, state = {}, platform = nil, suite = nil)
    super(transport, state, platform, suite).tap do |options|
      self.class::ConfigureInspecRunnerBackend.call hostname: state.fetch(:hostname), options: options
      self.class::ConfigureInspecRunnerHost.call hostname: state.fetch(:hostname), options: options
      self.class::ConfigureInspecRunnerPort.call group: state.fetch(:group), options: options
      self
        .class::ConfigureInspecRunnerSSHKey
        .call(
          group: state.fetch(:group),
          options: options
        )
      self.class::ConfigureInspecRunnerUser.call group: state.fetch(:group), options: options
      self.class::ConfigureInspecRunnerAttributes
        .call(driver: driver, group: state.fetch(:group), terraform_state: driver[:state]).bind do |attributes|
          config.store :attributes, attributes
        end
      self.class::ConfigureInspecRunnerControls.call group: state.fetch(:group), options: options
    end
  end
end

require "kitchen/verifier/terraform/configure_inspec_runner_attributes"
require "kitchen/verifier/terraform/configure_inspec_runner_backend"
require "kitchen/verifier/terraform/configure_inspec_runner_controls"
require "kitchen/verifier/terraform/configure_inspec_runner_host"
require "kitchen/verifier/terraform/configure_inspec_runner_port"
require "kitchen/verifier/terraform/configure_inspec_runner_ssh_key"
require "kitchen/verifier/terraform/configure_inspec_runner_user"
require "kitchen/verifier/terraform/enumerate_groups_and_hostnames"
